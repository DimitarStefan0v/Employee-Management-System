@using EMS.Web.ViewModels.Employees;
@model SingleEmployeeViewModel

@{
    this.ViewData["Title"] = $"Employee: {Model.FirstName} {Model.LastName}";
    var assignmentsElements = this.Model.Assignments.Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Title });
}

<section class="byId-wrapper">
    <h2 class="text-center">@this.ViewData["Title"]</h2>
    <section class="employee-byId-wrapper">
        <i class="fas fa-user byId"></i>
        <article class="employee-byId-wrapper-details">
            <article class="employee-byId-wrapper-firsName">First Name: <strong>@Model.FirstName</strong></article>
            <article class="employee-byId-wrapper-lastName">Last Name: <strong>@Model.LastName</strong></article>
            <article class="employee-byId-wrapper-email">Email: <strong>@Model.Email</strong></article>
            <article class="employee-byId-wrapper-phone">Phone Number: <strong>@Model.PhoneNumber</strong></article>
            <article class="employee-byId-wrapper-birthday">Date of Birth: <strong>@Model.DateOfBirth.ToString("dddd, dd MMMM yyyy")</strong></article>
            <article class="employee-byId-wrapper-salary">Monthly Salary: <strong>@Model.MonthlySalary euro</strong></article>
        </article>
    </section>
    <div class="mb-3">
        <form method="post" asp-action="AssignTask" asp-route-employeeId="@Model.Id" class="assignment-form" enctype="application/x-www-form-urlencoded">
            <select asp-for="AssignmentId" asp-items="assignmentsElements" class="form-select" aria-label="Default select example">
                <option value="0">Add new task</option>
            </select>
            <input type="submit" value="Assign" class="btn btn-primary" />
        </form>
    </div>
    <ul class="employee-btns mb-3">
        <li><a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-success">Edit</a></li>
        <li>
            <form method="post" asp-action="Delete" asp-route-id="@Model.Id">
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Delete</button>
                <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="staticBackdropLabel">Please confirm</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete the employee?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button class="btn btn-danger">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </li>
    </ul>
    <article class="employee-byId-wrapper-pendingAssignments mb-4">
        <h4 class="text-center">Pending Tasks</h4>
        @if (Model.PendingAssignments.Count == 0)
        {
            <p>This employee don't have pending tasks</p>
        }
        else
        {
            @foreach (var task in Model.PendingAssignments)
            {
                <article class="pendingAssignments">
                    <p>Task: @task.Title</p>
                    <p>Start Date: @task.StartDate.ToString("dddd, dd MMMM yyyy")</p>
                    <p>Due Date: @task.DueDate.ToString("dddd, dd MMMM yyyy")</p>
                    <a class="btn btn-success" asp-action="CompleteTask" asp-route-employeeId="@Model.Id" asp-route-assignmentId="@task.Id">Complete Task</a>
                </article>
            }
        }
    </article>
    <article class="employee-byId-wrapper-finishedAssignments mb-4">
        <h4 class="text-center">Completed Tasks</h4>
        @if (Model.FinishedAssignments.Count == 0)
        {
            <p>This employee hasn't completed a task</p>
        }
        else
        {
            @foreach (var task in Model.FinishedAssignments)
            {
                <article class="finishedAssignments">
                    <p>Task: @task.Title</p>
                    <p>Start Date: @task.StartDate.ToString("dddd, dd MMMM yyyy")</p>
                    <p>Due Date: @task.DueDate.ToString("dddd, dd MMMM yyyy")</p>
                    <p>Completed Date: @task.CompletedDate.Value.ToString("dddd, dd MMMM yyyy")</p>
                </article>
            }
        }
    </article>
</section>